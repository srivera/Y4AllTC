com.serenegiant.encoder.MediaAudioEncoder -> com.serenegiant.a.a:
    com.serenegiant.encoder.MediaAudioEncoder$AudioThread mAudioThread -> j
    void prepare() -> a
    void startRecording() -> b
    void release() -> c
    android.media.MediaCodecInfo selectAudioCodec(java.lang.String) -> a
com.serenegiant.encoder.MediaAudioEncoder$AudioThread -> com.serenegiant.a.b:
    com.serenegiant.encoder.MediaAudioEncoder this$0 -> a
    void run() -> run
com.serenegiant.encoder.MediaEncoder -> com.serenegiant.a.c:
    java.lang.Object mSync -> a
    boolean mIsCapturing -> b
    int mRequestDrain -> j
    boolean mRequestStop -> c
    boolean mIsEOS -> d
    boolean mMuxerStarted -> e
    int mTrackIndex -> f
    android.media.MediaCodec mMediaCodec -> g
    java.lang.ref.WeakReference mWeakMuxer -> h
    android.media.MediaCodec$BufferInfo mBufferInfo -> k
    com.serenegiant.encoder.MediaEncoder$MediaEncoderListener mListener -> i
    long prevOutputPTSUs -> l
    java.lang.String getOutputPath() -> d
    boolean frameAvailableSoon() -> e
    void run() -> run
    void prepare() -> a
    void startRecording() -> b
    void stopRecording() -> f
    void release() -> c
    void signalEndOfInputStream() -> g
    void encode(byte[],int,long) -> a
    void drain() -> h
    long getPTSUs() -> i
com.serenegiant.encoder.MediaEncoder$MediaEncoderListener -> com.serenegiant.a.d:
    void onPrepared(com.serenegiant.encoder.MediaEncoder) -> a
    void onStopped(com.serenegiant.encoder.MediaEncoder) -> b
com.serenegiant.encoder.MediaMuxerWrapper -> com.serenegiant.a.e:
    java.text.SimpleDateFormat mDateTimeFormat -> a
    java.lang.String mOutputPath -> b
    android.media.MediaMuxer mMediaMuxer -> c
    int mEncoderCount -> d
    int mStatredCount -> e
    boolean mIsStarted -> f
    com.serenegiant.encoder.MediaEncoder mVideoEncoder -> g
    com.serenegiant.encoder.MediaEncoder mAudioEncoder -> h
    java.lang.String getOutputPath() -> a
    void prepare() -> b
    void startRecording() -> c
    void stopRecording() -> d
    boolean isStarted() -> e
    void addEncoder(com.serenegiant.encoder.MediaEncoder) -> a
    boolean start() -> f
    void stop() -> g
    int addTrack(android.media.MediaFormat) -> a
    void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo) -> a
    java.io.File getCaptureFile(java.lang.String,java.lang.String) -> a
    java.lang.String getDateTimeString() -> h
com.serenegiant.encoder.MediaSurfaceEncoder -> com.serenegiant.a.f:
    android.view.Surface mSurface -> k
    int[] recognizedFormats -> j
    android.view.Surface getInputSurface() -> j
    void prepare() -> a
    void release() -> c
    int calcBitRate() -> k
    android.media.MediaCodecInfo selectVideoCodec(java.lang.String) -> a
    int selectColorFormat(android.media.MediaCodecInfo,java.lang.String) -> a
    boolean isRecognizedViewoFormat(int) -> a
com.serenegiant.encoder.MediaVideoEncoder -> com.serenegiant.a.g:
    com.serenegiant.glutils.RenderHandler mRenderHandler -> k
    android.view.Surface mSurface -> l
    int[] recognizedFormats -> j
    boolean frameAvailableSoon(float[]) -> a
    boolean frameAvailableSoon() -> e
    void prepare() -> a
    void setEglContext(android.opengl.EGLContext,int) -> a
    void release() -> c
    int calcBitRate() -> j
    android.media.MediaCodecInfo selectVideoCodec(java.lang.String) -> a
    int selectColorFormat(android.media.MediaCodecInfo,java.lang.String) -> a
    boolean isRecognizedViewoFormat(int) -> a
com.serenegiant.glutils.EGLBase -> com.serenegiant.b.a:
    android.opengl.EGLConfig mEglConfig -> a
    android.opengl.EGLContext mEglContext -> b
    android.opengl.EGLDisplay mEglDisplay -> c
    android.opengl.EGLContext mDefaultContext -> d
    void release() -> a
    com.serenegiant.glutils.EGLBase$EglSurface createFromSurface(java.lang.Object) -> a
    android.opengl.EGLContext getContext() -> b
    void init(android.opengl.EGLContext,boolean,boolean) -> a
    boolean makeCurrent(android.opengl.EGLSurface) -> a
    void makeDefault() -> c
    int swap(android.opengl.EGLSurface) -> b
    android.opengl.EGLContext createContext(android.opengl.EGLContext) -> a
    void destroyContext() -> d
    android.opengl.EGLSurface createWindowSurface(java.lang.Object) -> b
    void destroyWindowSurface(android.opengl.EGLSurface) -> c
    void checkEglError(java.lang.String) -> a
    android.opengl.EGLConfig getConfig(boolean,boolean) -> a
    android.opengl.EGLSurface access$0(com.serenegiant.glutils.EGLBase,java.lang.Object) -> a
    boolean access$2(com.serenegiant.glutils.EGLBase,android.opengl.EGLSurface) -> a
    int access$3(com.serenegiant.glutils.EGLBase,android.opengl.EGLSurface) -> b
    void access$4(com.serenegiant.glutils.EGLBase) -> a
    void access$5(com.serenegiant.glutils.EGLBase,android.opengl.EGLSurface) -> c
com.serenegiant.glutils.EGLBase$EglSurface -> com.serenegiant.b.b:
    com.serenegiant.glutils.EGLBase mEgl -> a
    android.opengl.EGLSurface mEglSurface -> b
    void makeCurrent() -> a
    void swap() -> b
    android.opengl.EGLContext getContext() -> c
    void release() -> d
com.serenegiant.glutils.GLDrawer2D -> com.serenegiant.b.c:
    float[] VERTICES -> e
    float[] TEXCOORD -> f
    java.nio.FloatBuffer pVertex -> g
    java.nio.FloatBuffer pTexCoord -> h
    int hProgram -> i
    int maPositionLoc -> a
    int maTextureCoordLoc -> b
    int muMVPMatrixLoc -> c
    int muTexMatrixLoc -> d
    float[] mMvpMatrix -> j
    void release() -> a
    void draw(int,float[]) -> a
    int initTex() -> b
    void deleteTex(int) -> a
    int loadShader(java.lang.String,java.lang.String) -> a
com.serenegiant.glutils.RenderHandler -> com.serenegiant.b.d:
    java.lang.Object mSync -> a
    android.opengl.EGLContext mShard_context -> b
    boolean mIsRecordable -> c
    java.lang.Object mSurface -> d
    int mTexId -> e
    float[] mTexMatrix -> f
    boolean mRequestSetEglContext -> g
    boolean mRequestRelease -> h
    int mRequestDraw -> i
    com.serenegiant.glutils.EGLBase mEgl -> j
    com.serenegiant.glutils.EGLBase$EglSurface mInputSurface -> k
    com.serenegiant.glutils.GLDrawer2D mDrawer -> l
    com.serenegiant.glutils.RenderHandler createHandler(java.lang.String) -> a
    void setEglContext(android.opengl.EGLContext,int,java.lang.Object,boolean) -> a
    void draw(float[]) -> a
    void draw(int,float[]) -> a
    void release() -> a
    void run() -> run
    void internalPrepare() -> b
    void internalRelease() -> c
com.serenegiant.usb.DeviceFilter -> com.serenegiant.usb.a:
    int mVendorId -> a
    int mProductId -> b
    int mClass -> c
    int mSubclass -> d
    int mProtocol -> e
    java.lang.String mManufacturerName -> f
    java.lang.String mProductName -> g
    java.lang.String mSerialNumber -> h
    java.util.List getDeviceFilters(android.content.Context,int) -> a
    int getAttributeInteger(android.content.Context,org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,int) -> a
    java.lang.String getAttributeString(android.content.Context,org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String,java.lang.String) -> a
    com.serenegiant.usb.DeviceFilter read(android.content.Context,org.xmlpull.v1.XmlPullParser) -> a
    boolean matches(int,int,int) -> a
    boolean matches(android.hardware.usb.UsbDevice) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.serenegiant.usb.IFrameCallback -> com.serenegiant.usb.b:
com.serenegiant.usb.USBMonitor -> com.serenegiant.usb.c:
    java.lang.String ACTION_USB_PERMISSION -> a
    java.util.concurrent.ConcurrentHashMap mCtrlBlocks -> b
    java.lang.ref.WeakReference mWeakContext -> c
    android.hardware.usb.UsbManager mUsbManager -> d
    com.serenegiant.usb.USBMonitor$OnDeviceConnectListener mOnDeviceConnectListener -> e
    android.app.PendingIntent mPermissionIntent -> f
    com.serenegiant.usb.DeviceFilter mDeviceFilter -> g
    android.os.Handler mHandler -> h
    android.content.BroadcastReceiver mUsbReceiver -> i
    int mDeviceCounts -> j
    java.lang.Runnable mDeviceCheckRunnable -> k
    void destroy() -> a
    void register() -> b
    void unregister() -> c
    int getDeviceCount() -> d
    java.util.List getDeviceList() -> e
    java.util.List getDeviceList(com.serenegiant.usb.DeviceFilter) -> a
    void requestPermission(android.hardware.usb.UsbDevice) -> a
    void processConnect(android.hardware.usb.UsbDevice) -> b
    void processCancel(android.hardware.usb.UsbDevice) -> c
    void processAttach(android.hardware.usb.UsbDevice) -> d
    void processDettach(android.hardware.usb.UsbDevice) -> e
    java.lang.String access$0(com.serenegiant.usb.USBMonitor) -> a
    void access$1(com.serenegiant.usb.USBMonitor,android.hardware.usb.UsbDevice) -> a
    void access$2(com.serenegiant.usb.USBMonitor,android.hardware.usb.UsbDevice) -> b
    void access$3(com.serenegiant.usb.USBMonitor,android.hardware.usb.UsbDevice) -> c
    java.util.concurrent.ConcurrentHashMap access$4(com.serenegiant.usb.USBMonitor) -> b
    void access$5(com.serenegiant.usb.USBMonitor,int) -> a
    void access$6(com.serenegiant.usb.USBMonitor,android.hardware.usb.UsbDevice) -> d
    int access$7(com.serenegiant.usb.USBMonitor) -> c
    com.serenegiant.usb.USBMonitor$OnDeviceConnectListener access$8(com.serenegiant.usb.USBMonitor) -> d
    android.os.Handler access$9(com.serenegiant.usb.USBMonitor) -> e
    android.hardware.usb.UsbManager access$10(com.serenegiant.usb.USBMonitor) -> f
com.serenegiant.usb.USBMonitor$1 -> com.serenegiant.usb.d:
    com.serenegiant.usb.USBMonitor this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.serenegiant.usb.USBMonitor$2 -> com.serenegiant.usb.e:
    com.serenegiant.usb.USBMonitor this$0 -> a
    void run() -> run
com.serenegiant.usb.USBMonitor$3 -> com.serenegiant.usb.f:
    com.serenegiant.usb.USBMonitor this$0 -> a
    android.hardware.usb.UsbDevice val$device -> b
    void run() -> run
com.serenegiant.usb.USBMonitor$4 -> com.serenegiant.usb.g:
    com.serenegiant.usb.USBMonitor this$0 -> a
    void run() -> run
com.serenegiant.usb.USBMonitor$5 -> com.serenegiant.usb.h:
    com.serenegiant.usb.USBMonitor this$0 -> a
    android.hardware.usb.UsbDevice val$device -> b
    void run() -> run
com.serenegiant.usb.USBMonitor$6 -> com.serenegiant.usb.i:
    com.serenegiant.usb.USBMonitor this$0 -> a
    android.hardware.usb.UsbDevice val$device -> b
    void run() -> run
com.serenegiant.usb.USBMonitor$OnDeviceConnectListener -> com.serenegiant.usb.j:
    void onAttach(android.hardware.usb.UsbDevice) -> a
    void onDettach(android.hardware.usb.UsbDevice) -> b
    void onConnect(android.hardware.usb.UsbDevice,com.serenegiant.usb.USBMonitor$UsbControlBlock,boolean) -> a
    void onDisconnect(android.hardware.usb.UsbDevice,com.serenegiant.usb.USBMonitor$UsbControlBlock) -> a
    void onCancel() -> a
com.serenegiant.usb.USBMonitor$UsbControlBlock -> com.serenegiant.usb.k:
    java.lang.ref.WeakReference mWeakMonitor -> b
    java.lang.ref.WeakReference mWeakDevice -> c
    android.hardware.usb.UsbDeviceConnection mConnection -> a
    android.util.SparseArray mInterfaces -> d
    android.hardware.usb.UsbDevice getDevice() -> a
    java.lang.String getDeviceName() -> b
    int getFileDescriptor() -> c
    int getVenderId() -> d
    int getProductId() -> e
    void close() -> f
com.serenegiant.usb.UVCCamera -> com.serenegiant.usb.UVCCamera:
    java.lang.String TAG -> TAG
    java.lang.String DEFAULT_USBFS -> DEFAULT_USBFS
    int DEFAULT_PREVIEW_WIDTH -> DEFAULT_PREVIEW_WIDTH
    int DEFAULT_PREVIEW_HEIGHT -> DEFAULT_PREVIEW_HEIGHT
    int DEFAULT_PREVIEW_MODE -> DEFAULT_PREVIEW_MODE
    int FRAME_FORMAT_YUYV -> FRAME_FORMAT_YUYV
    int FRAME_FORMAT_MJPEG -> FRAME_FORMAT_MJPEG
    int PIXEL_FORMAT_RAW -> PIXEL_FORMAT_RAW
    int PIXEL_FORMAT_YUV -> PIXEL_FORMAT_YUV
    int PIXEL_FORMAT_RGB565 -> PIXEL_FORMAT_RGB565
    int PIXEL_FORMAT_RGBX -> PIXEL_FORMAT_RGBX
    int PIXEL_FORMAT_YUV420SP -> PIXEL_FORMAT_YUV420SP
    int PIXEL_FORMAT_NV21 -> PIXEL_FORMAT_NV21
    boolean isLoaded -> isLoaded
    com.serenegiant.usb.USBMonitor$UsbControlBlock mCtrlBlock -> mCtrlBlock
    long mNativePtr -> mNativePtr
    void open(com.serenegiant.usb.USBMonitor$UsbControlBlock) -> open
    void close() -> close
    void setPreviewSize(int,int,int) -> setPreviewSize
    void setPreviewDisplay(android.view.SurfaceHolder) -> setPreviewDisplay
    void setPreviewTexture(android.graphics.SurfaceTexture) -> setPreviewTexture
    void setPreviewDisplay(android.view.Surface) -> setPreviewDisplay
    void setFrameCallback(com.serenegiant.usb.IFrameCallback,int) -> setFrameCallback
    void startPreview() -> startPreview
    void stopPreview() -> stopPreview
    void destroy() -> destroy
    java.lang.String getUSBFSName(com.serenegiant.usb.USBMonitor$UsbControlBlock) -> getUSBFSName
    long nativeCreate() -> nativeCreate
    void nativeDestroy(long) -> nativeDestroy
    int nativeConnect(long,int,int,int,java.lang.String) -> nativeConnect
    int nativeRelease(long) -> nativeRelease
    int nativeSetPreviewSize(long,int,int,int) -> nativeSetPreviewSize
    int nativeStartPreview(long) -> nativeStartPreview
    int nativeStopPreview(long) -> nativeStopPreview
    int nativeSetPreviewDisplay(long,android.view.Surface) -> nativeSetPreviewDisplay
    int nativeSetFrameCallback(long,com.serenegiant.usb.IFrameCallback,int) -> nativeSetFrameCallback
    void startCapture(android.view.Surface) -> startCapture
    void stopCapture() -> stopCapture
    int nativeSetCaptureDisplay(long,android.view.Surface) -> nativeSetCaptureDisplay
com.serenegiant.usbcameratest3.CameraDialog -> com.serenegiant.usbcameratest3.a:
    java.lang.String TAG -> b
    com.serenegiant.usb.USBMonitor mUSBMonitor -> a
    android.widget.Spinner mSpinner -> c
    com.serenegiant.usbcameratest3.CameraDialog$DeviceListAdapter mDeviceListAdapter -> d
    android.view.View$OnClickListener mOnClickListener -> e
    android.content.DialogInterface$OnClickListener mOnDialogClickListener -> f
    com.serenegiant.usbcameratest3.CameraDialog showDialog(android.app.Activity) -> a
    com.serenegiant.usbcameratest3.CameraDialog newInstance() -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    android.view.View initView() -> c
    void onResume() -> onResume
    void updateDevices() -> b
    android.widget.Spinner access$0(com.serenegiant.usbcameratest3.CameraDialog) -> a
com.serenegiant.usbcameratest3.CameraDialog$1 -> com.serenegiant.usbcameratest3.b:
    com.serenegiant.usbcameratest3.CameraDialog this$0 -> a
    void onClick(android.view.View) -> onClick
com.serenegiant.usbcameratest3.CameraDialog$2 -> com.serenegiant.usbcameratest3.c:
    com.serenegiant.usbcameratest3.CameraDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.serenegiant.usbcameratest3.CameraDialog$DeviceListAdapter -> com.serenegiant.usbcameratest3.d:
    android.view.LayoutInflater mInflater -> a
    java.util.List mList -> b
    int getCount() -> getCount
    android.hardware.usb.UsbDevice getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.serenegiant.usbcameratest3.MainActivity -> com.serenegiant.usbcameratest3.MainActivity:
    com.serenegiant.usb.USBMonitor mUSBMonitor -> a
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler mHandler -> b
    com.serenegiant.widget.CameraViewInterface mUVCCameraView -> c
    android.widget.ToggleButton mCameraButton -> d
    android.widget.ImageButton mCaptureButton -> e
    android.view.View$OnClickListener mOnClickListener -> f
    android.view.View$OnLongClickListener mOnLongClickListener -> g
    com.serenegiant.usb.USBMonitor$OnDeviceConnectListener mOnDeviceConnectListener -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
    void startPreview() -> b
    com.serenegiant.usb.USBMonitor getUSBMonitor() -> a
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler access$0(com.serenegiant.usbcameratest3.MainActivity) -> a
    android.widget.ImageButton access$1(com.serenegiant.usbcameratest3.MainActivity) -> b
    void access$2(com.serenegiant.usbcameratest3.MainActivity) -> c
    android.widget.ToggleButton access$3(com.serenegiant.usbcameratest3.MainActivity) -> d
com.serenegiant.usbcameratest3.MainActivity$1 -> com.serenegiant.usbcameratest3.e:
    com.serenegiant.usbcameratest3.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.serenegiant.usbcameratest3.MainActivity$2 -> com.serenegiant.usbcameratest3.f:
    com.serenegiant.usbcameratest3.MainActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.serenegiant.usbcameratest3.MainActivity$3 -> com.serenegiant.usbcameratest3.g:
    com.serenegiant.usbcameratest3.MainActivity this$0 -> a
    void onAttach(android.hardware.usb.UsbDevice) -> a
    void onConnect(android.hardware.usb.UsbDevice,com.serenegiant.usb.USBMonitor$UsbControlBlock,boolean) -> a
    void onDisconnect(android.hardware.usb.UsbDevice,com.serenegiant.usb.USBMonitor$UsbControlBlock) -> a
    void onDettach(android.hardware.usb.UsbDevice) -> b
    void onCancel() -> a
    com.serenegiant.usbcameratest3.MainActivity access$0(com.serenegiant.usbcameratest3.MainActivity$3) -> a
com.serenegiant.usbcameratest3.MainActivity$3$1 -> com.serenegiant.usbcameratest3.h:
    com.serenegiant.usbcameratest3.MainActivity$3 this$1 -> a
    void run() -> run
com.serenegiant.usbcameratest3.MainActivity$4 -> com.serenegiant.usbcameratest3.i:
    com.serenegiant.usbcameratest3.MainActivity this$0 -> a
    void run() -> run
com.serenegiant.usbcameratest3.MainActivity$CameraHandler -> com.serenegiant.usbcameratest3.j:
    java.lang.ref.WeakReference mWeakThread -> a
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler createHandler(com.serenegiant.usbcameratest3.MainActivity,com.serenegiant.widget.CameraViewInterface) -> a
    boolean isCameraOpened() -> a
    boolean isRecording() -> b
    void openCamera(com.serenegiant.usb.USBMonitor$UsbControlBlock) -> a
    void closeCamera() -> c
    void startPreview(android.view.Surface) -> a
    void stopPreview() -> d
    void captureStill() -> e
    void startRecording() -> f
    void stopRecording() -> g
    void handleMessage(android.os.Message) -> handleMessage
com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread -> com.serenegiant.usbcameratest3.k:
    java.lang.Object mSync -> a
    java.lang.ref.WeakReference mWeakParent -> b
    java.lang.ref.WeakReference mWeakCameraView -> c
    boolean mIsRecording -> d
    android.media.SoundPool mSoundPool -> e
    int mSoundId -> f
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler mHandler -> g
    com.serenegiant.usb.UVCCamera mUVCCamera -> h
    com.serenegiant.encoder.MediaMuxerWrapper mMuxer -> i
    com.serenegiant.encoder.MediaEncoder$MediaEncoderListener mMediaEncoderListener -> j
    void finalize() -> finalize
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler getHandler() -> a
    boolean isCameraOpened() -> b
    boolean isRecording() -> c
    void handleOpen(com.serenegiant.usb.USBMonitor$UsbControlBlock) -> a
    void handleClose() -> d
    void handleStartPreview(android.view.Surface) -> a
    void handleStopPreview() -> e
    void handleCaptureStill() -> f
    void handleStartRecording() -> g
    void handleStopRecording() -> h
    void handleUpdateMedia(java.lang.String) -> a
    void handleRelease() -> i
    void loadSutterSound(android.content.Context) -> a
    void run() -> run
    void access$0(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread,boolean) -> a
    java.lang.ref.WeakReference access$1(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread) -> a
    com.serenegiant.usb.UVCCamera access$2(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread) -> b
    java.lang.ref.WeakReference access$3(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread) -> c
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler access$4(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread) -> d
    java.lang.Object access$6(com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread) -> e
com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread$1 -> com.serenegiant.usbcameratest3.l:
    com.serenegiant.usbcameratest3.MainActivity$CameraHandler$CameraThread this$2 -> a
    void onPrepared(com.serenegiant.encoder.MediaEncoder) -> a
    void onStopped(com.serenegiant.encoder.MediaEncoder) -> b
com.serenegiant.widget.AspectRatioViewInterface -> com.serenegiant.widget.a:
    void setAspectRatio(double) -> setAspectRatio
    void onPause() -> a
    void onResume() -> b
com.serenegiant.widget.CameraViewInterface -> com.serenegiant.widget.b:
    android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    void setVideoEncoder(com.serenegiant.encoder.MediaEncoder) -> setVideoEncoder
    android.graphics.Bitmap captureStillImage() -> c
com.serenegiant.widget.UVCCameraTextureView -> com.serenegiant.widget.UVCCameraTextureView:
    double mRequestedAspect -> a
    boolean mHasSurface -> b
    com.serenegiant.widget.UVCCameraTextureView$RenderHandler mRenderHandler -> c
    java.lang.Object mCaptureSync -> d
    android.graphics.Bitmap mTempBitmap -> e
    boolean mReqesutCaptureStillImage -> f
    void onResume() -> b
    void onPause() -> a
    void setAspectRatio(double) -> setAspectRatio
    void onMeasure(int,int) -> onMeasure
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    android.graphics.Bitmap captureStillImage() -> c
    android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    void setVideoEncoder(com.serenegiant.encoder.MediaEncoder) -> setVideoEncoder
com.serenegiant.widget.UVCCameraTextureView$RenderHandler -> com.serenegiant.widget.c:
    com.serenegiant.widget.UVCCameraTextureView$RenderHandler$RenderThread mThread -> a
    boolean mIsActive -> b
    com.serenegiant.widget.UVCCameraTextureView$RenderHandler createHandler(android.graphics.SurfaceTexture) -> a
    void setVideoEncoder(com.serenegiant.encoder.MediaEncoder) -> a
    android.graphics.SurfaceTexture getPreviewTexture() -> a
    void release() -> b
    void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
    void handleMessage(android.os.Message) -> handleMessage
com.serenegiant.widget.UVCCameraTextureView$RenderHandler$RenderThread -> com.serenegiant.widget.d:
    java.lang.Object mSync -> a
    android.graphics.SurfaceTexture mSurface -> b
    com.serenegiant.widget.UVCCameraTextureView$RenderHandler mHandler -> c
    com.serenegiant.glutils.EGLBase mEgl -> d
    com.serenegiant.glutils.EGLBase$EglSurface mEglSurface -> e
    com.serenegiant.glutils.GLDrawer2D mDrawer -> f
    int mTexId -> g
    android.graphics.SurfaceTexture mPreviewSurface -> h
    float[] mStMatrix -> i
    com.serenegiant.encoder.MediaEncoder mEncoder -> j
    com.serenegiant.widget.UVCCameraTextureView$RenderHandler getHandler() -> a
    void updatePreviewSurface() -> b
    void setEncoder(com.serenegiant.encoder.MediaEncoder) -> a
    void onDrawFrame() -> c
    void run() -> run
    void init() -> d
    void release() -> e
    java.lang.Object access$0(com.serenegiant.widget.UVCCameraTextureView$RenderHandler$RenderThread) -> a
    android.graphics.SurfaceTexture access$1(com.serenegiant.widget.UVCCameraTextureView$RenderHandler$RenderThread) -> b
com.serenegiant.widget.UVCCameraTextureView2 -> com.serenegiant.widget.UVCCameraTextureView2:
    double mRequestedAspect -> a
    boolean mHasSurface -> b
    com.serenegiant.encoder.MediaEncoder mEncoder -> c
    void onResume() -> b
    void onPause() -> a
    void setAspectRatio(double) -> setAspectRatio
    void onMeasure(int,int) -> onMeasure
    void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    void setVideoEncoder(com.serenegiant.encoder.MediaEncoder) -> setVideoEncoder
    android.graphics.Bitmap captureStillImage() -> c
